-- // Update FOV Function // -- @canyoulovemeback on discord / supercoolboi34
local function updateFov()
    local settings = getgenv().SharpSSilent.FovSettings
    clearFovParts()
    
    -- Calculate the center of the screen
    local screenCenter = V2(Current_Camera.ViewportSize.X / 2, Current_Camera.ViewportSize.Y / 2)
    
    if settings.DynamicFOV.Enabled then
        local dynamicSettings = settings.DynamicFOV
        if dynamicSettings.Type == "Speed" and Local_Player.Character and Local_Player.Character:FindFirstChild("HumanoidRootPart") then
            local speed = Local_Player.Character.HumanoidRootPart.Velocity.Magnitude
            settings.FovRadius = math.clamp(dynamicSettings.MinFOV + (speed / dynamicSettings.SpeedThreshold) * (dynamicSettings.MaxFOV - dynamicSettings.MinFOV), dynamicSettings.MinFOV, dynamicSettings.MaxFOV)
        elseif dynamicSettings.Type == "Health" and Local_Player.Character and Local_Player.Character:FindFirstChild("Humanoid") then
            local healthPercent = (Local_Player.Character.Humanoid.Health / Local_Player.Character.Humanoid.MaxHealth) * 100
            settings.FovRadius = math.clamp(dynamicSettings.MinFOV + ((100 - healthPercent) / dynamicSettings.HealthThreshold) * (dynamicSettings.MaxFOV - dynamicSettings.MinFOV), dynamicSettings.MinFOV, dynamicSettings.MaxFOV)
        end
    end

    if settings.FovShape == "Square" then
        local halfSize = settings.FovRadius / 2
        local corners = {
            V2(screenCenter.X - halfSize, screenCenter.Y - halfSize),
            V2(screenCenter.X + halfSize, screenCenter.Y - halfSize),
            V2(screenCenter.X + halfSize, screenCenter.Y + halfSize),
            V2(screenCenter.X - halfSize, screenCenter.Y + halfSize)
        }
        for i = 1, 4 do
            local line = Drawing.new("Line")
            line.Visible = settings.FovVisible
            line.From = corners[i]
            line.To = corners[i % 4 + 1]
            line.Color = settings.FovColor
            line.Thickness = settings.FovThickness
            line.Transparency = settings.FovTransparency
            table.insert(FovParts, line)
        end
    elseif settings.FovShape == "Triangle" then
        local points = {
            V2(screenCenter.X, screenCenter.Y - settings.FovRadius),
            V2(screenCenter.X + settings.FovRadius * math.sin(math.rad(60)), screenCenter.Y + settings.FovRadius * math.cos(math.rad(60))),
            V2(screenCenter.X - settings.FovRadius * math.sin(math.rad(60)), screenCenter.Y + settings.FovRadius * math.cos(math.rad(60)))
        }
        for i = 1, 3 do
            local line = Drawing.new("Line")
            line.Visible = settings.FovVisible
            line.From = points[i]
            line.To = points[i % 3 + 1]
            line.Color = settings.FovColor
            line.Thickness = settings.FovThickness
            line.Transparency = settings.FovTransparency
            table.insert(FovParts, line)
        end
    else 
        Fov.Visible = settings.FovVisible
        Fov.Radius = settings.FovRadius
        Fov.Position = screenCenter
        Fov.Color = settings.FovColor
        Fov.Thickness = settings.FovThickness
        Fov.Transparency = settings.FovTransparency
        Fov.Filled = settings.Filled
        if settings.Filled then
            Fov.Transparency = settings.FillTransparency
        end
    end
end
